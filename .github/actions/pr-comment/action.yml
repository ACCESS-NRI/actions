name: PR Comment
description: Action that comments on a given PR
inputs:
  comment:
    type: string
    required: false
    description: The body of the comment, in GitHub Markdown format
  comment-file:
    type: string
    required: false
    description: Path to a file containing a comment, in GitHub Markdown format
  pr:
    type: number
    required: false
    description: The Pull Request Number that will be commented on. Defaults to the PR associated with the callers event
  edit-last:
    type: boolean
    required: false
    default: false
    description: Edit the last comment by 'github-actions[bot]' instead of creating a new one
  token:
    type: string
    required: false
    description: A GitHub Token/PAT that allows commenting on the given PR. Defaults to github.token
outputs:
  comment-link:
    description: A link to the added comment
    value: ${{ steps.comment.outputs.link }}
runs:
  using: composite
  steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set Non-Required Inputs
      shell: bash
      run: |
        # Verify comment/file exists
        if [[ -z "${{ inputs.comment }}" && -z "${{ inputs.comment-file }}" ]]; then
          echo "::error::Neither comment nor comment-file are set"
          exit 1
        elif [[ -n "${{ inputs.comment }}" && -n "${{ inputs.comment-file }}" ]]; then
          echo ":error::Both comment and comment-file are set"
          exit 1
        fi

        # Set PR
        if [[ -z "${{ inputs.pr }}" ]]; then
          if [[ -n "${{ github.event.issue }}" ]]; then
            echo "PR=${{ github.event.issue.number }}" >> $GITHUB_ENV
          elif [[ -n "${{ github.event.pull_request }}" ]]; then
            echo "PR=${{ github.event.pull_request.number }}" >> $GITHUB_ENV
          else
            echo "::error::Couldn't infer PR number from event payload, please enter as an input"
            exit 1
          fi
        else
          echo "PR=${{ inputs.pr }}" >> $GITHUB_ENV
        fi

        # Set GH_TOKEN
        if [[ -z "${{ inputs.token }}" ]]; then
          echo "GH_TOKEN=${{ github.token }}" >> $GITHUB_ENV
        else
          echo "GH_TOKEN=${{ inputs.token }}" >> $GITHUB_ENV
        fi

    - name: Comment on PR ${{ inputs.pr }}
      shell: bash
      id: comment
      env:
        BODY: |
          ${{ inputs.comment }}
      run: |
        if [[ -n "${{ inputs.comment }}" ]]; then
          echo "link=$(gh pr comment ${{ env.PR }} ${{ inputs.edit-last && '--edit-last' }} --body '${{ env.BODY }}')" >> $GITHUB_OUTPUT
        elif [[ -n "${{ inputs.comment-file }}" ]]; then
          echo "link=$(gh pr comment ${{ env.PR }} ${{ inputs.edit-last && '--edit-last' }} --body-file '${{ inputs.comment-file }}')" >> $GITHUB_OUTPUT
        fi
