name: Publish Python package
on:
  workflow_call:
    inputs:
      pyproject_toml_dir:
        type: string
        required: false
        default: ""
        description: "The directory where the pyproject.toml file is located, relative to the repository top-level directory."
      pypi_package:
        type: boolean
        required: false
        default: true
        description: "Whether to create the Python wheel and publish it to PyPI"
      conda_package:
        type: boolean
        required: false
        default: true
        description: "Whether to create the Conda package and publish it to Anaconda.org"
      pypi_token:
        type: string
        required: false
        default: ${{ secrets.PYPI_TOKEN }}
        description: "The token used to publish the package to PyPI. Ignored if `pypi_package` is false."
      anaconda_token:
        type: string
        required: false
        default: ${{ secrets.ANACONDA_TOKEN }}
        description: "The token used to publish the package to Anaconda.org. Ignored if `conda_package` is false."
      anaconda_username:
        type: string
        required: false
        default: ${{ secrets.ANACONDA_USERNAME }}
        description: "The name of the conda channel where the package will be published to. Ignored if `conda_package` is false."

env:
  PYTHON_ARTIFACT_NAME: _python_artifact
  PYTHON_ARTIFACT_DIR: _artifact_dir
  ARTIFACT_NAME: _dist_artifact
      
jobs:
  set_pyproject_toml_dir:
    name: Check pyproject.toml directory
    runs-on: ubuntu-latest
    outputs:
      pyproject_toml_dir: ${{ steps.set-pyproject-toml-dir.outputs.pyproject_toml_dir }}
    steps:
      - uses: actions/checkout@v5

      - name: Set pyproject.toml directory
        id: set-pyproject-toml-dir
        run: |
          if [ -z '${{ inputs.pyproject_toml_dir }}' ]; then
            pyproject_toml_dir='.'
          else
            pyproject_toml_dir='${{ inputs.pyproject_toml_dir }}'
          fi
          if [ ! -d "$pyproject_toml_dir" ]; then
            echo "::error Directory '$pyproject_toml_dir' not found in the current repository"
            exit 1
          fi
          if [ ! -f "$pyproject_toml_dir/pyproject.toml" ]; then
            echo "::error 'pyproject.toml' not found in '${{ inputs.pyproject_toml_dir }}'"
            exit 1
          fi
          echo "pyproject_toml_dir=$pyproject_toml_dir" >> $GITHUB_OUTPUT
          echo "pyproject.toml found in '$pyproject_toml_dir'"

  build_tarball_and_python_wheel:
    name: Build tarball and Python wheel
    runs-on: ubuntu-latest
    needs: set_pyproject_toml_dir
    steps:
      - uses: actions/checkout@v5

      - uses: actions/setup-python@v5
        
      - name: Install build dependencies
        run: python -m pip install build ${{ inputs.pypi_package == 'true' && "twine" || "" }}

      - name: Build distributions
        run: |
          pyproject-build '${{ inputs.pypi_package != 'true' && "--sdist" || "" }}' \
            --outdir '${{ env.PYTHON_ARTIFACT_DIR }}'
            --src '${{ needs.set_pyproject_toml_dir.outputs.pyproject_toml_dir }}'

      - uses: actions/upload-artifact@v4
        with:
          name: ${{ env.PYTHON_ARTIFACT_NAME }}
          path: ${{ env.PYTHON_ARTIFACT_DIR }}/*
  
  publish-pypi-package:
    name: Publish package to PyPI
    runs-on: ubuntu-latest
    needs: build_tarball_and_python_wheel
    if: ${{ inputs.pypi_package }}
    steps:
      - uses: actions/checkout@v5
      
      - name: Download artifact
        id: download-artifact
        uses: actions/download-artifact@v5
        with:
          name: ${{ env.PYTHON_ARTIFACT_NAME }}
    
      - name: Publish package to PyPI
        uses: pypa/gh-action-pypi-publish@ed0c53931b1dc9bd32cbe73a98c7f6766f8a527e # v1.13.0
        with:
          password: ${{ inputs.pypi_token }}
          packages_dir: ${{ env.PYTHON_ARTIFACT_DIR }}

  publish-conda-package:
    name: Publish package to Anaconda.org
    runs-on: ubuntu-latest
    needs: build_tarball_and_python_wheel
    if: ${{ inputs.conda_package }}
    steps:
      - uses: actions/checkout@v4

      - name: Download artifact
        id: download-artifact
        uses: actions/download-artifact@v5
        with:
          name: ${{ env.PYTHON_ARTIFACT_NAME }}
    
      - name: Set up micromamba
        uses: mamba-org/setup-micromamba@v2
        with:
          environment-name: build-env
          create-args: >-
            conda-build
            anaconda-client
            versioneer
            grayskull
      
      - name: Create recipe from tarball
        run: |
          grayskull pypi ${{ env.PYTHON_ARTIFACT_DIR }}/*.tar.gz --output recipe_dir
      
      - name: Publish package to Anaconda.org
        id: publish-conda-package
        uses: ACCESS-NRI/action-build-and-upload-conda-packages@v3.0.0
        with:
          meta_yaml_dir: recipe_dir
          user: ${{ inputs.anaconda_username }}
          token: ${{ inputs.anaconda_token }}

      - uses: actions/upload-artifact@v4
        with:
          name: ${{ env.ARTIFACT_NAME }}
          path: |
            ${{ steps.publish-conda-package.outputs.paths }}
            ${{ env.PYTHON_ARTIFACT_DIR }}/*
    
      - name: Set output artifact name
        run: echo "artifact-name=${{ env.ARTIFACT_NAME }}" >> $GITHUB_OUTPUT